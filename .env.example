
# ü§ñ CONFIGURA√á√ÉO DO ASSISTENTE IA ERGOG√äNICOS

# ==========================================
# CONFIGURA√á√ïES OBRIGAT√ìRIAS
# ==========================================

# API do Google Gemini (OBRIGAT√ìRIO)
# Obtenha sua chave em: https://makersuite.google.com/app/apikey
VITE_GEMINI_API_KEY=sua_chave_real_do_gemini_aqui

# Senha do Painel Administrativo (ALTERE ANTES DE USAR)
# Acesso em: http://localhost:[PORTA_AUTO]/admin
VITE_ADMIN_PASSWORD=admin123

# ==========================================
# CONFIGURA√á√ïES DO SERVIDOR
# ==========================================

# Ambiente de execu√ß√£o
NODE_ENV=development

# PORTA AUTOM√ÅTICA - N√ÉO CONFIGURAR MANUALMENTE
# O Vite detecta automaticamente uma porta livre
# Prefer√™ncia: 8080, mas usa qualquer porta dispon√≠vel se ocupada
# Exemplo: 8080, 8081, 8082, 3000, 3001, etc.

# ==========================================
# CONFIGURA√á√ïES OPCIONAIS
# ==========================================

# T√≠tulo da aplica√ß√£o (aparece no navegador)
VITE_APP_TITLE=Assistente Ergog√™nicos IA

# ==========================================
# CONFIGURA√á√ïES AVAN√áADAS (OPCIONAL)
# ==========================================

# Configura√ß√µes da IA (sobrescreve painel admin)
# VITE_AI_MAX_TOKENS=500
# VITE_AI_TEMPERATURE=0.7

# Debug (desenvolvimento)
# VITE_DEBUG_ASSISTANT=true
# VITE_DEBUG_GEMINI=true

# ==========================================
# INSTRU√á√ïES DE USO
# ==========================================

# 1. Copie este arquivo para .env.local
#    cp .env.example .env.local

# 2. Configure sua chave do Google Gemini
#    VITE_GEMINI_API_KEY=AIzaSy...

# 3. Altere a senha padr√£o do admin
#    VITE_ADMIN_PASSWORD=sua_senha_forte_aqui

# 4. Inicie a aplica√ß√£o (porta ser√° detectada automaticamente)
#    npm run dev

# ==========================================
# DEPLOY EM PRODU√á√ÉO - VPS
# ==========================================

# Para produ√ß√£o em VPS, configure:
# export VITE_GEMINI_API_KEY=sua_chave_real
# export VITE_ADMIN_PASSWORD=senha_muito_forte
# export NODE_ENV=production

# Execute o deploy (detecta porta livre automaticamente):
# ./smart-deploy.sh

# ==========================================
# DETEC√á√ÉO AUTOM√ÅTICA DE PORTA
# ==========================================

# ‚úÖ O sistema verifica automaticamente:
# - Porta 8080 (preferencial)
# - Se ocupada, tenta 8081, 8082, etc.
# - Fallback para range 3000-9000
# - Logs mostram qual porta foi escolhida

# ‚ö†Ô∏è  NUNCA force uma porta fixa em produ√ß√£o!
# ‚ö†Ô∏è  Use sempre strictPort: false no vite.config.ts

# ==========================================
# SEGURAN√áA
# ==========================================

# ‚ö†Ô∏è  NUNCA commite o arquivo .env.local
# ‚ö†Ô∏è  Use senhas fortes para VITE_ADMIN_PASSWORD
# ‚ö†Ô∏è  Mantenha VITE_GEMINI_API_KEY segura
# ‚ö†Ô∏è  Configure firewall no servidor de produ√ß√£o

# ==========================================
# SUPORTE
# ==========================================

# Para problemas de configura√ß√£o:
# 1. Verifique se todas as vari√°veis obrigat√≥rias est√£o definidas
# 2. Teste a chave do Gemini no Google AI Studio
# 3. Consulte os logs: npm run dev
# 4. Acesse o painel admin para verificar configura√ß√µes
# 5. Verifique qual porta foi escolhida nos logs do terminal
